{
  "type": "Microsoft.Authorization/policyAssignments",
  "name": "TestRequireTags",
  "apiVersion": "2019-09-01",
  "identity": {
    "type": "SystemAssigned"
  },
  "location": "${default_location}",
  "properties": {
    "displayName": "Test Require a tag and its value on resource groups",
    "policyType": "Custom",
    "mode": "All",
    "description": "Enforces a required tag and its value on resource groups.",
    "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/8ce3da23-7156-49e4-b145-24f95f9dcb46",
    "scope": "${current_scope_resource_id}",
    "enforcementMode": "Default",
    "metadata": {
      "category": "Tags"
        },
        "parameters": {
          "effect": {
            "type": "String",
            "metadata": {
              "displayName": "Effect",
              "description": "Enable or disable the execution of the audit policy"
            },
            "allowedValues": [
              "Audit",
              "Deny",
              "Disabled"
            ],
            "defaultValue": "Deny"
          },
          "tagName": {
            "type": "String",
            "metadata": {
              "displayName": "Tag Name",
              "description": "Name of the tag, such as 'environment'"
            },
            "defaultValue": "environment"
          },
          "listofallowedtagValues": {
            "type": "Array",
            "metadata": {
              "displayName": "Tag Values",
              "description": "Value of the tag, such as 'production'"
            },
            "allowedValues": [
              "dev",
              "test",
              "prod"
            ]
          },
          "tagValue": {
            "type": "String",
            "metadata": {
              "displayName": "Tag Value",
              "description": "Value of the tag to be enforced, such as 'production'"
            }
          }
        },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "field": "type",
            "equals": "Microsoft.Resources/subscriptions/resourceGroups"
          },
          {
            "not": {
              "field": "[concat('tags[', parameters('tagName'), ']')].value",
              "in": "[parameters('tagValue')]"
            }
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    }
  }
}